/// A type whose values can be relocated to different storage.
public trait Movable {

  /// Gives `self` the value of a consumed `source`.
  fun take_value(from source: sink Self) -> {self: Self, Void} {
    set
    inout
  }

}

public extension Movable {

  /// Exchanges the value of `self` with that of `other`.
  public fun exchange(with other: inout Self) inout {
    sink let x = self
    &self = other
    &other = x
  }

}

// TODO: Remove in favor of `Movable.exchange(with:)` when #1064 is fixed
public fun swap<T: Movable>(_ a: inout T, _ b: inout T) {
  sink let x = a
  &a = b
  &b = x
}
