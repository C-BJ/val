name: Build and test

# README:
#
# The semantics for running shell commands in GitHub actions is non-obvious. Please read
# https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#jobsjob_idstepsshell
# before modifying this file. Our strategy is to rely on the built-in (unspecified) shell, and
# explicitly set the shell settings we want (with `set -eo pipefail`) at the beginning of any
# bash script. For more information on these settings, see `man bash`.
#
# GitHub Actions files can be difficult to modify with confidence, because testing changes often
# requires pushing to a branch and running CI remotely. To make this process easier, consider
# the following:
#
# 1) Use Visual Studio Code with the GitHub Actions Extension (github.vscode-github-actions).
#    This allows you to check the validity of your action schema and syntax without pushing to a
#    branch.
# 2) Use https://github.com/nektos/act to run your CI steps locally. Note this will only work with
#    steps run on Linux platforms, as `act` is implemented with Docker containers.

on:
  push:
    branches: [ "**" ]
    paths-ignore:
      - "Docs/**"
      - "**.md"
      - "README.md"
      - "LICENSE"
      - ".gitignore"
  pull_request:
    branches: [ "**" ]
    paths-ignore:
      - "Docs/**"
      - "**.md"
      - "README.md"
      - "LICENSE"
      - ".gitignore"

jobs:
  build-native-windows:
    name: "Native: windows-latest/release"
    strategy:
      fail-fast: false
    runs-on: windows-latest
    steps:
    - name: Setup swift
      uses: compnerd/gha-setup-swift@main
      with:
        github-repo: thebrowsercompany/swift-build
        release-asset-name: installer-amd64.exe
        release-tag-name: 20231010.3
        github-token: ${{ secrets.GITHUB_TOKEN }}

    - uses: actions/checkout@v3

    - name: Swift version
      run: swift --version

    - name: Set up LLVM 15.0.6
      run: |
        curl.exe -L -O -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}"https://github.com/c3lang/win-llvm/releases/download/llvm_15_0_6/llvm-15.0.6-windows-x86-msvc17-msvcrt.7z
        7z x llvm-15.0.6-windows-x86-msvc17-msvcrt.7z -oC:\
        Add-Content $env:GITHUB_PATH 'C:\llvm-15.0.6-windows-x86-msvc17-msvcrt\bin'
        
    - run: llvm-config --version

    - name: Generate LLVM pkgconfig file
      run: |
        swift package resolve
        & "C:\Program Files\Git\bin\bash.exe" .build/checkouts/Swifty-LLVM/Tools/make-pkgconfig.sh llvm.pc
        type llvm.pc

    - name: Build support library
      run: clang -c ./Library/Hylo/LibC.c -o HyloLibC.lib

    - name: Build
      run: swift build --pkg-config-path . -c release

    - name: Build tests
      run: swift build --build-tests --pkg-config-path . -c release

    - name: Test
      run: swift test --skip-build --pkg-config-path . -c release
